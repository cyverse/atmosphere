###############################################################################
## HTTP Virtual Host Context (Forwards requests to HTTPS)
###############################################################################
<VirtualHost *:80>
    ErrorLog ${APACHE_LOG_DIR}/error.log
    LogLevel warn
    CustomLog ${APACHE_LOG_DIR}/access.log combined

    Alias /init_files /opt/dev/atmosphere/init_files

    RewriteEngine On
    RewriteCond %{HTTPS} !=on
    RewriteCond %{REQUEST_URI} !^/init_files
    RewriteRule ^/?(.*) https://MYHOSTNAMEHERE.iplantc.org/$1 [R,L]
</VirtualHost>

###############################################################################
## SSL Configuration
###############################################################################
SSLCryptoDevice builtin

###############################################################################
## Celery-Flower proxy redirection
###############################################################################
ProxyRequests Off
ProxyPreserveHost On
SSLProxyEngine On

ProxyPass         /flower  https://MYHOSTNAMEHERE.iplantc.org:8443
ProxyPassReverse  /flower  https://MYHOSTNAMEHERE.iplantc.org:8443
ProxyPassReverse  /flower  https://MYHOSTNAMEHERE.iplantc.org/flower

<Proxy https://MYHOSTNAMEHERE.iplantc.org:8443/flower*>
    Order deny,allow
    Allow from all
</Proxy>

###############################################################################
## Jenkins proxy redirection
###############################################################################
ProxyPass         /jenkins  http://MYHOSTNAMEHERE:8080/jenkins
ProxyPassReverse  /jenkins  http://MYHOSTNAMEHERE:8080/jenkins
ProxyPassReverse  /jenkins  http://MYHOSTNAMEHERE/jenkins

<Proxy http://MYHOSTNAMEHERE.iplantc.org:8080/jenkins*>
    Order deny,allow
    Allow from all
</Proxy>

###############################################################################
## Atmosphere Server Virtualhost (Port 443)
###############################################################################
<VirtualHost *:443>
    # Rewrite
    RewriteEngine On
    RewriteCond %{HTTP:Authorization} ^(.*)
    RewriteRule .* - [e=HTTP_AUTHORIZATION:%1]
    # for the old domain
    RewriteCond %{HTTP_HOST} ^MYHOSTNAMEHERE.iplantcollaborative.org$
    RewriteRule ^/(.*)$       https://MYHOSTNAMEHERE.iplantc.org/$1 [R,L]
  
    # SSL Settings
    SSLEngine on
    SSLProtocol all -SSLv2
    SSLCipherSuite ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM:+LOW
    SSLCertificateFile /etc/ssl/certs/BASECERTHERE
    SSLCertificateKeyFile /etc/ssl/private/KEYHERE
    SSLCertificateChainFile /etc/ssl/certs/BUNDLECERTHERE
  
    <Files ~ "\.(cgi|shtml|phtml|php3?)$">
        SSLOptions +StdEnvVars
    </Files>
    <Directory "/var/www/cgi-bin">
        SSLOptions +StdEnvVars
    </Directory>
  
    SetEnvIf User-Agent ".*MSIE.*" \
             nokeepalive ssl-unclean-shutdown \
             downgrade-1.0 force-response-1.0

    SetEnv DJANGO_SETTINGS_MODULE atmosphere.settings

    # Logging
    ErrorLog /var/log/apache2/ssl_error.log
    TransferLog /var/log/apache2/ssl_access.log
    LogLevel warn

    # Catch static file paths
    # favicon and robots are better served outside of WSGI
    Alias /favicon.ico PATH_TO_ATMOSPHERE/static/images/favicon.ico
    Alias /robots.txt PATH_TO_ATMOSPHERE/templates/robots.txt
    #init_files && resources will auto-direct to the file
    Alias /init_files PATH_TO_ATMOSPHERE/init_files
    Alias /resources PATH_TO_ATMOSPHERE/resources
    #Assing WSGI to any other folder
    WSGIScriptAlias / PATH_TO_ATMOSPHERE/atmosphere/wsgi.py

    # Shell
    <Location /shell>
        AuthType CAS
        AuthName "CAS"
        require valid-user
        CASScope /
        Order allow,deny
        Allow from all
    </Location>

    Alias /static/rest_framework PATH_TO_ATMOSPHERE/static/rest_framework

    # The following URLs are proxied to Troposphere:
    # /, /static, /applicaiton, /login, /logout, /cas/service
    Alias /assets PATH_TO_TROPOSPHERE/troposphere/assets
    ProxyPass /application http://localhost:5000/application
    ProxyPassReverse /application http://localhost:5000/application
    ProxyPass /login http://localhost:5000/login
    ProxyPassReverse /login http://localhost:5000/login
    ProxyPass /logout http://localhost:5000/logout
    ProxyPassReverse /logout http://localhost:5000/logout
    ProxyPass /cas/oauth2.0 http://localhost:5000/cas/oauth2.0
    ProxyPassReverse /cas/oauth2.0 http://localhost:5000/cas/oauth2.0
    ProxyPass /cas/service http://localhost:5000/cas/service
    ProxyPassReverse /cas/service http://localhost:5000/cas/service
    ProxyPass /forbidden http://localhost:5000/forbidden
    ProxyPassReverse /forbidden http://localhost:5000/forbidden
    ProxyPass /version http://localhost:5000/version
    ProxyPassReverse /version http://localhost:5000/version

    ProxyPassMatch ^/emulate http://localhost:5000
    ProxyPassReverse /emulate http://localhost:5000
    ProxyPassMatch ^/$ http://localhost:5000
    ProxyPassReverse / http://localhost:5000

</VirtualHost>

###############################################################################
## Troposphere Server Virtualhost (Port 5000)
###############################################################################
Listen 5000
<VirtualHost *:5000>
    SetEnv DJANGO_SETTINGS_MODULE troposphere.settings
    WSGIScriptAlias / PATH_TO_TROPOSPHERE/troposphere/wsgi.py

    # Logging
    ErrorLog /var/log/apache2/ssl_error.log
    TransferLog /var/log/apache2/ssl_access.log
    LogLevel warn

    <Directory PATH_TO_TROPOSPHERE/trosposphere>
        <Files wsgi.py>
        Order deny,allow
        Require all granted
        </Files>
    </Directory>
</VirtualHost>

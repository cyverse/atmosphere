#!/bin/bash
# Atmosphere init.d
# chkconfig: 345 20 80
# description: Atmosphere as a service


NAME='Atmosphere'
DESC="Deals with the workflow associated with running atmospehre as a service"

WEB_SERVICE="nginx" # could be httpd on centos..
WEB_INITD="/etc/init.d/$WEB_SERVICE"
CELERY_INITD="/etc/init.d/celeryd"
CELERYBEAT_INITD="/etc/init.d/celerybeat"
#REDIS_INITD="/etc/init.d/redis-server" #Ubuntu 12.04
REDIS_INITD="/etc/init/redis-server.conf" #Ubuntu 14.04
CELERY_DEFAULT="/etc/default/celeryd"

if [ ! -f  $CELERY_INITD ]; then
    echo "MISSING DEPEDENCY: Expected celery service file $CELERY_INITD missing"
    echo "For Ubuntu:"
    echo "ln -s /opt/dev/atmosphere/extras/init.d/ubuntu.celeryd $CELERY_INITD"
    echo "For CentOS:"
    echo "ln -s /opt/dev/atmosphere/extras/init.d/centos.celeryd $CELERY_INITD"
    exit 1
elif [ ! -f  $CELERYBEAT_INITD ]; then
    echo "MISSING DEPEDENCY: Expected celery service file $CELERYBEAT_INITD missing"
    echo "For Ubuntu:"
    echo "ln -s /opt/dev/atmosphere/extras/init.d/ubuntu.celerybeat $CELERYBEAT_INITD"
    exit 1
elif [ ! -f  $CELERY_DEFAULT ]; then
    echo "MISSING DEPEDENCY: Celery config file $CELERY_DEFAULT missing."
    echo "cp /opt/dev/atmosphere/extras/init.d/celeryd.default.dist /opt/dev/atmosphere/extras/init.d/celeryd.default"
    echo "ln -s /opt/dev/atmosphere/extras/init.d/celeryd.default $CELERY_DEFAULT"
    exit 1
elif [ ! -f  $REDIS_INITD ]; then
    echo "MISSING DEPEDENCY: Init file for $REDIS_INITD missing."
    echo "sudo apt-get install redis-server"
    exit 1
elif [ ! -f  $WEB_INITD ]; then
    echo "MISSING DEPEDENCY: Expected apache service file $WEB_INITD missing"
    exit 1
fi

case "$1" in
status)
    service $WEB_SERVICE status
    service redis-server status
    service celeryd status
    service celerybeat status
    service uwsgi status atmo.uwsgi
    service uwsgi status trop.uwsgi
;;
full-start | start)
    printf "Starting $NAME...\n"
    if [[ $EUID -ne 0 ]]; then
        echo "You must be a root user to start atmosphere"
        exit 1
    fi
    printf "Starting uwsgi..\n"
    service uwsgi start
    printf "Starting $WEB_SERVICE\n"
    service $WEB_SERVICE start
    printf "Starting redis server..\n"
    service redis-server start
    printf "Starting Celery..\n"
    service celeryd start
    printf "Starting Celerybeat..\n"
    service celerybeat start
;;
full-stop)
    printf "Stopping $NAME...\n"
    if [[ $EUID -ne 0 ]]; then
        echo "You must be a root user to stop atmosphere"
        exit 1
    fi
    printf "Stopping uwsgi..\n"
    service uwsgi stop
    printf "Stopping $WEB_SERVICE\n"
    service $WEB_SERVICE stop
    printf "Stopping Celery..\n"
    service celeryd stop
    service celerybeat stop
    printf "Stopping redis server..\n"
    service redis-server stop
;;
stop)
    printf "Stopping $NAME...\n"
    if [[ $EUID -ne 0 ]]; then
        echo "You must be a root user to stop atmosphere"
        exit 1
    fi
    printf "Stopping $WEB_SERVICE\n"
    service $WEB_SERVICE stop
    printf "Stopping Celery..\n"
    service celeryd stop
    service celerybeat stop
;;

restart)
    if [[ $EUID -ne 0 ]]; then
        echo "You must be a root user to restart atmosphere"
        exit 1
    fi
    echo "Restarting Atmosphere Web Services"
    service uwsgi restart
    service $WEB_SERVICE restart
;;

celery-restart)
    if [[ $EUID -ne 0 ]]; then
        echo "You must be a root user to restart atmosphere"
        exit 1
    fi
    echo "Restarting Atmosphere Web Services"
    service uwsgi restart
    service $WEB_SERVICE restart
    #echo "Force Killing All Celery Nodes"
    #service celeryd kill
    echo "Restarting Atmosphere Celery Nodes"
    service celeryd restart
    service celerybeat restart
;;

*)
        echo "Usage: $0 {celery-restart|full-start|full-stop|status|start|stop|restart}"
        echo "Full start/stop will include the redis-server in the process"
        exit 1
esac

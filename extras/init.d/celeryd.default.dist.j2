# App instance to use
CELERY_APP="atmosphere"

# Atmosphere setup ALWAYS includes Queues/Workers for:
#   * imaging
#   * celery_periodic
#   * email

{% if USE_PRODUCTION %}
#############
# Production Settings (14 nodes!)
#############
# 2 Celery Queues, First is 'default', concurrency 8 and the second is 'imaging', concurrency 1
CELERYD_NODES="atmosphere-node_1 atmosphere-node_2 atmosphere-node_3 atmosphere-node_4"
CELERYD_NODES="$CELERYD_NODES atmosphere-fast_1 atmosphere-fast_2"
CELERYD_NODES="$CELERYD_NODES atmosphere-deploy_1 atmosphere-deploy_2 atmosphere-deploy_3 atmosphere-deploy_4 atmosphere-deploy_5 atmosphere-deploy_6 atmosphere-deploy_7"
CELERYD_NODES="$CELERYD_NODES imaging celery_periodic email"

CELERYD_OPTS="-Q:atmosphere-node_1 default -c:atmosphere-node_1 5 -O:atmosphere-node_1 fair"
CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-node_2 default -c:atmosphere-node_2 5 -O:atmosphere-node_2 fair"
CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-node_3 default -c:atmosphere-node_3 5 -O:atmosphere-node_3 fair"
CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-node_4 default -c:atmosphere-node_4 5 -O:atmosphere-node_4 fair"

CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-fast_1 fast_deploy -c:atmosphere-fast_1 5 -O:atmosphere-fast_1 fair"
CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-fast_2 fast_deploy -c:atmosphere-fast_2 5 -O:atmosphere-fast_2 fair"

CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-deploy_1 ssh_deploy -c:atmosphere-deploy_1 2 -O:atmosphere-deploy_1 fair"
CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-deploy_2 ssh_deploy -c:atmosphere-deploy_2 2 -O:atmosphere-deploy_2 fair"
CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-deploy_3 ssh_deploy -c:atmosphere-deploy_3 2 -O:atmosphere-deploy_3 fair"
CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-deploy_4 ssh_deploy -c:atmosphere-deploy_4 2 -O:atmosphere-deploy_4 fair"
CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-deploy_5 ssh_deploy -c:atmosphere-deploy_5 2 -O:atmosphere-deploy_5 fair"
CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-deploy_6 ssh_deploy -c:atmosphere-deploy_6 2 -O:atmosphere-deploy_6 fair"
CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-deploy_7 ssh_deploy -c:atmosphere-deploy_7 2 -O:atmosphere-deploy_7 fair"

CELERYD_OPTS="$CELERYD_OPTS -Q:email email -c:email 3  -O:email fair"

CELERYD_OPTS="$CELERYD_OPTS -Q:imaging imaging -c:imaging 1 -O:imaging fair"

CELERYD_OPTS="$CELERYD_OPTS -Q:celery_periodic periodic -c:celery_periodic 3 -O:celery_periodic fair"
CELERYD_OPTS="$CELERYD_OPTS -Q:email email -c:email 1 -O:email fair"

# The format of the CELERYD_ULIMIT variable is something like "-n <max_open_files>"
CELERYD_ULIMIT="-n 65536"
{% else %}
#############
# Development Settings (Single-Node!)
#############

CELERYD_NODES="atmosphere-node_1"
CELERYD_NODES="$CELERYD_NODES atmosphere-deploy_1"

CELERYD_OPTS="-Q default,email,imaging,celery_periodic -c 13 -O fair"
CELERYD_OPTS="$CELERYD_OPTS -Q:atmosphere-deploy_1 fast_deploy,ssh_deploy -c:atmosphere-deploy_1 10 -O:atmosphere-deploy_1 fair"

{% endif %}

#Our celery requires root access for sudo/chroot/mount
C_FORCE_ROOT="True"
export C_FORCE_ROOT

# Where to chdir at start.
# the module that defines your Celery app instance also
# set a default value for DJANGO_SETTINGS_MODULE
CELERYD_CHDIR="{{ ATMOSPHERE_LOCATION }}"

# TLS certificate files
TLS_CERT_FILE="{{ CELERYD_TLS_CERT_DEST }}"
TLS_KEY_FILE="{{ CELERYD_TLS_PRIVKEY_DEST }}"

# Safe list of serializers used by celery
CELERY_ACCEPT_CONTENT="['pickle', 'json', 'msgpack']"

# Environment location
VIRTUALENV="{{ VIRTUALENV_PATH }}"
# Abs path to the 'celery' command
CELERY_BIN="$VIRTUALENV/bin/celery"
FLOWER_BIN="$VIRTUALENV/bin/flower"

#Set the env properly
export PATH="$CELERYD_CHDIR:$VIRTUALENV/bin:$VIRTUALENV/lib/python2.7/site-packages:$PATH"
export PYTHONPATH="$CELERYD_CHDIR:$PYTHONPATH"
export DJANGO_SETTINGS_MODULE="atmosphere.settings"

# %n will be replaced with the nodename.
CELERYD_LOG_FILE="/var/log/celery/%n.log"
CELERYD_PID_FILE="/var/run/celery/%n.pid"

# Create log/pid dirs, if they dont already exist
CELERY_CREATE_DIRS=1

# Atmosphere Celery user *MUST* be root for imaging
CELERYD_USER="root"
CELERYD_GROUP="root"

###
# Additional Celeryd settings
###
CELERYD_MAX_TASKS_PER_CHILD="150"

###
#
# Additional celery flower settings
###
CELERYD_FLOWER="$FLOWER_BIN"
{% if FLOWER_AUTH_SCHEME == "basic" %}
ADMIN_USER="{{ FLOWER_BASIC_USERNAME }}"
ADMIN_PASS="{{ FLOWER_BASIC_PASSWORD }}"
FLOWER_AUTH_OPT="--app=$CELERY_APP --basic_auth=$ADMIN_USER:$ADMIN_PASS"
{% elif FLOWER_AUTH_SCHEME == "google" %}
OAUTH2_ACCESS_LIST="{{ FLOWER_EMAIL_ACCESS_LIST }}"
OAUTH2_CLIENT_ID="{{ FLOWER_OAUTH2_CLIENT_ID }}"
OAUTH2_CLIENT_SECRET="{{ FLOWER_OAUTH2_CLIENT_SECRET }}"
OAUTH2_REDIRECT_URI="{{ FLOWER_OAUTH2_REDIRECT_URI }}"
FLOWER_AUTH_OPT="--app=$CELERY_APP --auth=$OAUTH2_ACCESS_LIST --oauth2_key=$OAUTH2_CLIENT_ID --oauth2_secret=$OAUTH2_CLIENT_SECRET --oauth2_redirect_uri=$OAUTH2_REDIRECT_URI --auth_provider=flower.views.auth.GoogleAuth2LoginHandler"
{% else %}
{% endif %}
#Include the atmosphere app when calling flower
FLOWER_AUTH_OPT="--app=$CELERY_APP $FLOWER_AUTH_OPT"
FLOWER_LOG_FILE="/var/log/celery/flower.log"
CELERY_FLOWER_OPTS="--certfile=$TLS_CERT_FILE --keyfile=$TLS_KEY_FILE --port=8443 --log_file_prefix=$FLOWER_LOG_FILE --logging=warn --url_prefix=flower $FLOWER_AUTH_OPT"

###
#
# Additional celerybeat settings
###

# Where to chdir at start.

CELERYBEAT_CHDIR="{{ ATMOSPHERE_LOCATION }}"
# Extra arguments to celerybeat
CELERYBEAT_OPTS="--schedule=django_celery_beat.schedulers.DatabaseScheduler"

#Where to log and store process id
CELERYBEAT_LOG_FILE="/var/log/celery/celerybeat.log"
CELERYBEAT_PID_FILE="/var/run/celerybeat.pid"

#Default is INFO
#CELERYBEAT_LOG_LEVEL="DEBUG"